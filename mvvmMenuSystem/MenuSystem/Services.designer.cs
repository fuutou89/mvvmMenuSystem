// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace mvvmMenuSystem {
    using mvvmMenuSystem;
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using uFrame.IOC;
    using uFrame.Kernel;
    using uFrame.MVVM;
    using UniRx;
    using UnityEngine;
    
    
    public class MenuServiceBase : uFrame.Kernel.SystemServiceMonoBehavior {
        
        public override void Setup() {
            base.Setup();
            this.OnEvent<OpenScreenCommand>().Subscribe(this.OpenScreenCommandHandler);
            this.OnEvent<DestoryInactivePanelsCommand>().Subscribe(this.DestoryInactivePanelsCommandHandler);
            this.OnEvent<HideMainMenuCommand>().Subscribe(this.HideMainMenuCommandHandler);
            this.OnEvent<PreLoadPanelCommand>().Subscribe(this.PreLoadPanelCommandHandler);
            this.OnEvent<ClosePanelCommand>().Subscribe(this.ClosePanelCommandHandler);
            this.OnEvent<ShowMainMenuCommand>().Subscribe(this.ShowMainMenuCommandHandler);
            this.OnEvent<OpenMainMenuCommand>().Subscribe(this.OpenMainMenuCommandHandler);
            this.OnEvent<CreateLoadingCommand>().Subscribe(this.CreateLoadingCommandHandler);
            this.OnEvent<ShowLoadingCommand>().Subscribe(this.ShowLoadingCommandHandler);
            this.OnEvent<HideLoadingCommand>().Subscribe(this.HideLoadingCommandHandler);
            this.OnEvent<OpenSubScreenCommand>().Subscribe(this.OpenSubScreenCommandHandler);
            this.OnEvent<GoHomeScreenCommand>().Subscribe(this.GoHomeScreenCommandHandler);
            this.OnEvent<OpenPopupCommand>().Subscribe(this.OpenPopupCommandHandler);
            this.OnEvent<ResetPanelCommand>().Subscribe(this.ResetPanelCommandHandler);
            this.OnEvent<PanelUnloadEvent>().Subscribe(this.PanelUnloadEventHandler);
            this.OnEvent<PanelLoadedEvent>().Subscribe(this.PanelLoadedEventHandler);
        }
        
        public virtual void OpenScreenCommandHandler(OpenScreenCommand data) {
        }
        
        public virtual void DestoryInactivePanelsCommandHandler(DestoryInactivePanelsCommand data) {
        }
        
        public virtual void HideMainMenuCommandHandler(HideMainMenuCommand data) {
        }
        
        public virtual void PreLoadPanelCommandHandler(PreLoadPanelCommand data) {
        }
        
        public virtual void ClosePanelCommandHandler(ClosePanelCommand data) {
        }
        
        public virtual void ShowMainMenuCommandHandler(ShowMainMenuCommand data) {
        }
        
        public virtual void OpenMainMenuCommandHandler(OpenMainMenuCommand data) {
        }
        
        public virtual void CreateLoadingCommandHandler(CreateLoadingCommand data) {
        }
        
        public virtual void ShowLoadingCommandHandler(ShowLoadingCommand data) {
        }
        
        public virtual void HideLoadingCommandHandler(HideLoadingCommand data) {
        }
        
        public virtual void OpenSubScreenCommandHandler(OpenSubScreenCommand data) {
        }
        
        public virtual void GoHomeScreenCommandHandler(GoHomeScreenCommand data) {
        }
        
        public virtual void OpenPopupCommandHandler(OpenPopupCommand data) {
        }
        
        public virtual void ResetPanelCommandHandler(ResetPanelCommand data) {
        }
        
        public virtual void PanelUnloadEventHandler(PanelUnloadEvent data) {
        }
        
        public virtual void PanelLoadedEventHandler(PanelLoadedEvent data) {
        }
    }
}
